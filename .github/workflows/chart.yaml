name: Helm Charts
on:
  pull_request:
    branches:
      - main
    paths:
      - "charts/**"
      - ".github/workflows/chart.yaml"
  push:
    branches:
      - main
    paths:
      - "charts/**"
      - ".github/workflows/chart.yaml"

env:
  PYTHON_VERSION: "3.9"
  HELM_VERSION: v3.11.2
  ARTIFACT_REGISTRY: europe-north1-docker.pkg.dev
  ARTIFACT_REPO: nais-io/nais
  SERVICE_ACCOUNT: gh-unleasherator@nais-io.iam.gserviceaccount.com

jobs:
  lint-test:
    name: Lint and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.5.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

          helm install prometheus-operator-crds  prometheus-community/prometheus-operator-crds --wait
          helm install unleasherator-crds ./charts/unleasherator-crds --wait
          ct install --charts ./charts/unleasherator --target-branch ${{ github.event.repository.default_branch }}
  push:
    permissions:
      contents: read
      id-token: write
    name: Build and push
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Log in to Google Artifact Registry
        run: |
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://${{ env.ARTIFACT_REGISTRY }}

      - uses: azure/setup-helm@v3
        name: Setup Helm
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Build Charts
        run: |
          helm package ./charts/unleasherator-crds -d ./charts/unleasherator-crds
          helm package ./charts/unleasherator -d ./charts/unleasherator

      - name: Push Chart
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          helm push ./charts/unleasherator-crds/*.tgz oci://${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO }}
          helm push ./charts/unleasherator/*.tgz oci://${{ env.ARTIFACT_REGISTRY }}/${{ env.ARTIFACT_REPO }}
