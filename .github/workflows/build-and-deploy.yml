name: Build and Deploy

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ["main"]
    paths:
      - "Makefile"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - "**.go"
      - .github/workflows/build-and-deploy.yml
  pull_request:
    branches: ["main"]
    paths:
      - "Makefile"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - "**.go"
      - .github/workflows/build-and-deploy.yml

env:
  GHCR_REGISTRY: ghcr.io
  GAR_REGISTRY: europe-north1-docker.pkg.dev/nais-io/nais/images

jobs:
  build:
    name: Build and Test code
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          nix-installer-tag: "v0.9.1"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test and build binary
        run: nix build --option log-lines 500
  # docker:
  #   name: Build and Push Docker image
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   outputs:
  #     version: ${{ steps.version.outputs.version }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.GHCR_REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - id: version
  #       run: echo "version=$(date +'%Y%m%d-%H%M%S')-$(git rev-parse --short HEAD)" >> ${GITHUB_OUTPUT}
  #     - uses: docker/setup-buildx-action@v2
  #     - uses: docker/metadata-action@v4
  #       id: metadata
  #       with:
  #         images: |
  #           ${{ env.GHCR_REGISTRY }}/${{ github.repository }}
  #         tags: |
  #           type=schedule
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern=v{{version}}
  #           type=semver,pattern=v{{major}}.{{minor}}
  #           type=semver,pattern=v{{major}}
  #           type=sha
  #           type=raw,value=${{ steps.version.outputs.version }}
  #     - uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: ${{ github.ref == 'refs/heads/main' }}
  #         tags: ${{ steps.metadata.outputs.tags }}
  #         labels: ${{ steps.metadata.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         platforms: linux/amd64
  # rollout:
  #   permissions:
  #     id-token: write
  #   needs: ["docker"]
  #   runs-on: fasit-deploy
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: nais/fasit-deploy@main
  #       with:
  #         json: '{"controllerManager": {"manager": {"image": {"tag": "${{ needs.docker.outputs.version }}"}}}}'
  #         feature_name: ${{ github.event.repository.name }}
