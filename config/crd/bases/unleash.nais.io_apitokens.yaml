---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: apitokens.unleash.nais.io
spec:
  group: unleash.nais.io
  names:
    kind: ApiToken
    listKind: ApiTokenList
    plural: apitokens
    singular: apitoken
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.created
      name: Created
      type: boolean
    - jsonPath: .spec.secretName
      name: Secret
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .spec.environment
      name: Environment
      type: string
    - jsonPath: .status.failed
      name: Failed
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApiTokenSpec defines the desired state of ApiToken
            properties:
              environment:
                default: development
                description: Environment is the environment to create the token for.
                type: string
              projects:
                default:
                - '*'
                description: Projects is the list of projects to create the token
                  for.
                items:
                  type: string
                type: array
              secretName:
                description: SecretName is the name of the secret where the token
                  will be stored.
                type: string
              type:
                default: CLIENT
                description: Type is the type of token to create. Valid values are
                  "CLIENT" and "FRONTEND".
                enum:
                - CLIENT
                - FRONTEND
                type: string
              unleashInstance:
                description: UnleashInstance is the Unleash instance this token is
                  for.
                properties:
                  apiVersion:
                    default: unleash.nais.io/v1
                    description: ApiVersion is the API version of the Unleash instance.
                    type: string
                  kind:
                    description: Kind is the API kind of the Unleash instance.
                    enum:
                    - Unleash
                    - RemoteUnleash
                    type: string
                  name:
                    description: Name is the name of the Unleash instance.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
            required:
            - secretName
            - unleashInstance
            type: object
          status:
            description: ApiTokenStatus defines the observed state of ApiToken
            properties:
              conditions:
                description: 'Represents the observations of a ApiToken''s current
                  state. Unleash.status.conditions.type are: "Created", and "Failed"
                  Unleash.status.conditions.status are one of True, False, Unknown.
                  Unleash.status.conditions.reason the value should be a CamelCase
                  string and producers of specific condition types may define expected
                  values and meanings for this field, and whether the values are considered
                  a guaranteed API. Unleash.status.conditions.Message is a human readable
                  message indicating details about the transition.'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              created:
                default: false
                description: Created is true when the Unleash API token has been created
                  successfully This is used for kubectl printing purposes. Rather
                  than relying on this value, check the conditions instead.
                type: boolean
              failed:
                default: false
                description: Failed is true when the Unleash API token creation has
                  failed This is used for kubectl printing purposes. Rather than relying
                  on this value, check the conditions instead.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
