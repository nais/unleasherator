apiVersion: unleash.nais.io/v1
kind: Unleash
metadata:
  labels:
    app.kuberentes.io/managed-by: kustomize
    app.kubernetes.io/created-by: unleasherator
    app.kubernetes.io/instance: unleash-sample
    app.kubernetes.io/name: unleash
    app.kubernetes.io/part-of: unleasherator
  name: unleash-sql-proxy-sample
spec:
  existingServiceAccountName: unleash-sql-proxy-sample
  apiIngress:
    class: nais-ingress
    enabled: true
    host: unleash-sql-proxy-sample-api.example.com
    path: /api/
  webIngress:
    class: nais-ingress-iap
    enabled: true
    host: unleash-sql-proxy-sample.example.com
    path: /
  database:
    host: localhost
    port: "5432"
    secretDatabaseNameKey: POSTGRES_DB
    secretName: unleash-sql-proxy-sample
    secretPassKey: POSTGRES_PASSWORD
    secretUserKey: POSTGRES_USER
    ssl: "false"
  extraContainers:
  - args:
    - --structured-logs
    - --port=5432
    - nais-management-7178:europe-north1:bifrost-79ca6928
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
    name: sql-proxy
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 65532
  networkPolicy:
    enabled: true
    allowDNS: true
    extraEgressRules:
    # Allow SQL proxy to connect to Cloud SQL instance
    - ports:
      - port: 3307
        protocol: TCP
      to:
      - ipBlock:
          cidr: 1.2.3.4/32
    # Allow SQL proxy to connect to Google Cloud Metadata server
    - ports:
      - port: 988
        protocol: TCP
      to:
      - ipBlock:
          cidr: 169.254.169.252/32
    - ports:
      - port: 988
        protocol: TCP
      to:
      - ipBlock:
          cidr: 127.0.0.1/32
    - ports:
      - port: 80
        protocol: TCP
      to:
      - ipBlock:
          cidr: 169.254.169.254/32
