---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-postgresql
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": hook-succeeded
type: Opaque
data:
  postgres-password: cG9zdGdyZXNwYXNzd29yZA== # postgrespassword
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: unleasherator
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:15.3
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-postgresql
              key: postgres-password
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: unleasherator
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app.kubernetes.io/name: postgresql
---
apiVersion: unleash.nais.io/v1
kind: Unleash
metadata:
  name: unleash-connection-test
  labels:
    app.kubernetes.io/name: unleash-connection-test
    app.kubernetes.io/part-of: unleasherator
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  size: 1
  customImage: unleashorg/unleash-server:5
  database:
    secretName: postgres-postgresql
    secretPassKey: postgres-password
    host: postgres-postgresql
    databaseName: postgres
    port: "5432"
    user: postgres
    ssl: "false"
  extraEnvVars:
    - name: ENABLE_OAS
      value: "true"
  networkPolicy:
    enabled: true
    allowDNS: true
    extraEgressRules:
      - to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: postgresql
        ports:
          - protocol: TCP
            port: 5432
---
apiVersion: unleash.nais.io/v1
kind: ApiToken
metadata:
  name: unleash-connection-test
  labels:
    app.kubernetes.io/name: unleash-connection-test
    app.kubernetes.io/part-of: unleasherator
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  unleashInstance:
    apiVersion: unleash.nais.io/v1
    kind: Unleash
    name: unleash-connection-test
  secretName: unleash-connection-test
  type: CLIENT
  environment: development
  projects:
    - default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: unleash-connection-test-probe
  labels:
    app.kubernetes.io/name: unleash-connection-test
    app.kubernetes.io/part-of: unleasherator
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unleash-connection-test
        app.kubernetes.io/part-of: unleasherator
    spec:
      containers:
      - name: connection-test
        image: curlimages/curl:7.88.1
        command:
        - sh
        - -c
        - |
          echo "Testing connection to Unleash server..."
          for i in $(seq 1 20); do
            echo "Attempt $i of 20..."
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: ${UNLEASH_SERVER_API_TOKEN}" ${UNLEASH_SERVER_API_URL}/api/client/features)
            echo "HTTP Status: $STATUS"
            if [ "$STATUS" = "200" ]; then
              echo "Connection successful!"
              exit 0
            fi
            sleep 5
          done
          echo "Connection failed after 20 attempts!"
          exit 1
        env:
        - name: UNLEASH_SERVER_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: unleash-connection-test
              key: UNLEASH_SERVER_API_TOKEN
        - name: UNLEASH_SERVER_API_URL
          valueFrom:
            secretKeyRef:
              name: unleash-connection-test
              key: UNLEASH_SERVER_API_URL
      restartPolicy: Never
