apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unleasherator.fullname" . }}-controller-manager
  labels:
    app: unleasherator
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: unleasherator
    app.kubernetes.io/part-of: unleasherator
    control-plane: controller-manager
  {{- include "unleasherator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "unleasherator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: unleasherator
        control-plane: controller-manager
      {{- include "unleasherator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - command:
        - /manager
        env:
        - name: API_TOKEN_NAME_SUFFIX
          value: {{ quote .Values.controllerManager.manager.env.apiTokenNameSuffix }}
        - name: FEDERATION_CLUSTER_NAME
          value: {{ quote .Values.controllerManager.manager.env.federationClusterName }}
        - name: FEDERATION_PUBSUB_MODE
          value: {{ quote .Values.controllerManager.manager.env.federationPubsubMode }}
        - name: FEDERATION_PUBSUB_GCP_PROJECT_ID
          value: {{ quote .Values.controllerManager.manager.env.federationPubsubGcpProjectId
            }}
        - name: FEDERATION_PUBSUB_TOPIC
          value: {{ quote .Values.controllerManager.manager.env.federationPubsubTopic }}
        - name: FEDERATION_PUBSUB_SUBSCRIPTION
          value: {{ quote .Values.controllerManager.manager.env.federationPubsubSubscription
            }}
        - name: FEATURE_API_TOKEN_UPDATE_ENABLED
          value: {{ quote .Values.controllerManager.manager.env.featureApiTokenUpdateEnabled
            }}
        - name: HTTPS_PROXY
          value: {{ quote .Values.controllerManager.manager.env.httpsProxy }}
        - name: NO_PROXY
          value: {{ quote .Values.controllerManager.manager.env.noProxy }}
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: {{ quote .Values.controllerManager.manager.env.googleApplicationCredentials
            }}
        - name: HEALTH_PROBE_BIND_ADDRESS
          value: {{ quote .Values.controllerManager.manager.env.healthProbeBindAddress
            }}
        - name: METRICS_BIND_ADDRESS
          value: {{ quote .Values.controllerManager.manager.env.metricsBindAddress }}
        - name: WEBHOOK_PORT
          value: {{ quote .Values.controllerManager.manager.env.webhookPort }}
        - name: LEADER_ELECTION_ENABLED
          value: {{ quote .Values.controllerManager.manager.env.leaderElectionEnabled }}
        - name: LEADER_ELECTION_RESOURCE_NAME
          value: {{ quote .Values.controllerManager.manager.env.leaderElectionResourceName
            }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /var/secrets/google
          name: controller-manager-gcp
          readOnly: true
      - args: {{- toYaml .Values.controllerManager.kubeRbacProxy.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext: {{- toYaml .Values.controllerManager.kubeRbacProxy.containerSecurityContext
          | nindent 10 }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "unleasherator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: controller-manager-gcp
        secret:
          items:
          - key: service-account-credentials.json
            path: service-account-credentials.json
          secretName: {{ include "unleasherator.fullname" . }}-controller-manager-gcp