controllerManager:
  kubeRbacProxy:
    args:
    - --secure-listen-address=0.0.0.0:8443
    - --upstream=http://127.0.0.1:8080/
    - --logtostderr=true
    - --v=0
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.13.0
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
  manager:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
    env:
      apiTokenNameSuffix: unleasherator
      federationClusterName: ""
      federationPubsubGcpProjectId: ""
      federationPubsubMode: ""
      federationPubsubSubscription: ""
      federationPubsubTopic: ""
      googleApplicationCredentials: ""
      healthProbeBindAddress: :8081
      httpsProxy: ""
      leaderElectionEnabled: "true"
      leaderElectionResourceName: 509984d3.nais.io
      metricsBindAddress: 127.0.0.1:8080
      noProxy: ""
      webhookPort: "9443"
    image:
      repository: ghcr.io/nais/unleasherator
      tag: main
    imagePullPolicy: Always
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 256Mi
  replicas: 1
  serviceAccount:
    annotations: {}
controllerManagerGcp:
  serviceAccountCredentialsJson: ""
kubernetesClusterDomain: cluster.local
metricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  type: ClusterIP
